// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CMPush
@_exported import CMPush
import CommonCrypto
import CryptoKit
import Foundation
import Swift
import UIKit
import UserNotifications
public func CMPush_SetTestUrl(_ url: Swift.String = "http://192.168.1.138:3001")
public func CMPush_SetApplePushEnvironment(_ environment: CMPush.CMPushEnvironment)
public func CMPush_Config(accountId: Swift.String, groupName: Swift.String)
public func CMPush_UpdateToken(deviceToken: Foundation.Data)
public func CMPush_PreRegister(msisdn: Swift.String, sender: Swift.String, withResult result: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
public func CMPush_Register(msisdn: Swift.String, otpCode: Swift.String, withResult result: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
public func CMPush_DeleteRegistration(withResult result: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
public func CMPush_StatusReport(bestAttemptContent: UserNotifications.UNMutableNotificationContent, withResult result: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
public func CMPush_IsRegistered() -> Swift.Bool
public enum CMPushEnvironment {
  case Production
  case Sandbox
  public static func == (a: CMPush.CMPushEnvironment, b: CMPush.CMPushEnvironment) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
extension CMPush.CMPushEnvironment : Swift.Equatable {}
extension CMPush.CMPushEnvironment : Swift.Hashable {}
